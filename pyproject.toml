[build-system]
requires = ["setuptools", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[project]
name = "stable-pretraining"
description = "Stable Pretraining Library for Self-Supervised Learning"
authors = []
license = {text = "MIT"}
readme = {file = "README.md", content-type = "text/markdown"}
dependencies = [
    # Core dependencies - minimal required for basic SSL training
    "torch",
    "torchvision",
    "torchmetrics",
    "lightning",
    "hydra-core",
    "loguru",
    "tabulate",
]

dynamic = ["version"]

[project.entry-points."console_scripts"]
spt = "stable_pretraining.cli:main"

[project.entry-points."lightning.pytorch.callbacks_factory"]
stablepretraining_callbacks = "stable_pretraining.callbacks.factories:default"

[tool.setuptools]
packages = ["stable_pretraining"]

[tool.setuptools_scm]
tag_regex = "^v(?P<version>.+)$"
write_to = "stable_pretraining/_version.py"
write_to_template = "version = \"{version}\"\n"

[project.optional-dependencies]
# Advanced vision models and transforms
vision = [
    "timm",
    "transformers",
    "pillow>=11.3.0",
]

# Experiment tracking
tracking = [
    "wandb",
]

# Cluster/SLURM execution support
cluster = [
    "hydra-submitit-launcher",
    "submitit",
]

# Visualization and reporting tools
visualization = [
    "matplotlib",
    "prettytable",
]

# Extra dataset support
datasets = [
    "datasets",  # HuggingFace datasets
    "pyarrow>=15.0.0",  # Required for datasets compatibility
    "minari[hdf5]>=0.5.3",  # Reinforcement learning datasets
]

# Additional utilities
extras = [
    "scikit-learn>=1.7.0",  # sklearn model checkpointing
    "requests-cache[all]",  # Caching for API requests
    "richuru",  # Enhanced logging formatting
]

# All optional dependencies
all = [
    "stable-pretraining[vision,tracking,cluster,visualization,datasets,extras]",
]

# Development tools
dev = [
    "pytest",
    "coverage",
    "pytest-cov",
    "codecov",
    "pre-commit",
    "ruff",
]

# Documentation tools
doc = [
    "sphinx",
    "sphinx-gallery",
    "sphinx-book-theme",
    "sphinxcontrib-bibtex",
    "matplotlib",
    "memory_profiler",
    "myst-parser",
]


[tool.ruff.lint]
select = ["E4", "E7", "E9", "F", "D"]
ignore = ["D100", "D102", "D103", "D104", "D105", "D107"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.format]
docstring-code-format = true
